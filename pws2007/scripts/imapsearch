#! /usr/bin/perl

use strict;
use warnings;

use IO::Socket::SSL;
use Mail::IMAPClient;
use Mail::SpamAssassin;
use PWSConfig;

my ($cref, $imap, $sa);

$cref = PWSConfig::setup_vars (required => 'server,user,password');

my $conn = new IO::Socket::SSL("$cref->{server}:imaps");

unless ($conn) {
	die "$0: imaps connection to $cref->{server} failed: $!\n";
}
							
$imap = new Mail::IMAPClient (Socket => $conn,
							  User => $cref->{user},
							  Password => $cref->{password});

# set state manually to "Connected"
$imap->{State} = 1;
$imap->login();

unless ($imap->login()) {
	die "Error: " . $imap->LastError() . "\n";
}

# setup SA interface
$sa = new Mail::SpamAssassin;

# defaults
$cref->{folder} ||= 'INBOX';
$cref->{searchtype} ||= 'ALL';

# select IMAP folder
unless ($imap->select($cref->{folder})) {
	die "$0: Failed to select IMAP folder $cref->{folder}: " . $imap->LastError();
}

# search messages
my @msgs = $imap->search('HEADER', $cref->{searchtype},
						 $imap->Quote($cref->{searchtoken}));

my ($message, $samsg, $status, $num, $names);

for my $msgno (@msgs) {
	print "$msgno: " . $imap->subject($msgno) . "\n";
	$message = $imap->message_string($msgno);
	$samsg = $sa->parse($message);

	$status = $sa->check($samsg);
	$num = $status->get_score();
	$names = $status->get_names_of_tests_hit();

	if ($status->is_spam()) {
		print "SPAM ($num), Treffer: $names\n";
	} else {
		print "HAM ($num)\n";
	}
}


