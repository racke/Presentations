# Vortrag Perlworkshop 2007
# -----------------------------------------------------------
# defaults
%deffont "standard" tfont "verdana.ttf"
%deffont "typewriter" tfont "courbd.ttf"
%default 1 vgap 0, fore "blue", back "white", font "standard", center
%default 2 vgap 0, fore "blue", back "white", font "standard"
%default 3 size 5, vgap 10, fore "black", back "white", font "standard", left
%default 4 fore "black", vgap 10, back "white", font "standard", left
%tab 1 fore "black", size 6, vgap 25,  prefix "    ", font "standard", left, icon box "red" 30
%tab 2 size 4, vgap 20,  prefix "           "
%tab 3 size 3,   prefix "                   "
%tab one_fit size 6, vgap 40,  prefix "    ", icon box "red" 30
%tab two_fit size 4, vgap 10,  prefix "           "
%tab three_fit size 2, vgap 10
%tab small fore "black", size 5, prefix "      ", icon box "red" 30
%tab aprog size 5, prefix "             ", font "standard"
%tab callprog  fore "black", size 3,   prefix "     ", font "typewriter"
%tab callproggy fore "black", size 3,   prefix "     ", font "typewriter"
%tab lit size 5,    prefix "    ", font "typewriter"
%tab litbig fore "black", size 5,    prefix "          ", font "typewriter"
%tab litgrey fore "grey", size 5,    prefix "      ", font "typewriter"
%tab litnorm fore "black", size 4, prefix "            ", font "typewriter"
%tab litnorm1 fore "black", size 4, prefix "                ", font "typewriter"
%tab litnorm2 fore "black", size 4, prefix "                             ", font "typewriter"
%tab litsmall size 3, prefix  "                ", font "typewriter"
%tab litsmall1 size 3, prefix "                    ", font "typewriter"
%tab litsmall2 size 3, prefix "                        ", font "typewriter"
%tab intro fore "blue", size 9, font "standard", center
%tab intro2 size 6, font "standard", center
%tab centersmall size 4, font "standard", center
%tab grey fore "grey", size 6, prefix "    ", icon box "red" 30
%tab smallgrey fore "grey", size 5, prefix "      ", icon box "red" 30
#
#
%page
%charset "iso8859-1"
%ccolor "blue"
# Einleitung:
# Hinweis auf Fragen am Ende des Vortrags
# 
# Bemerkungen zu Net::SMTP
# Mail::IMAPClient => Methoden ins Protokoll, Suche
# ClamAV::Client

%center

&intro SpamAssassin, Antivirus und Email via Perl

##&intro2 Struktur, Konfiguration und Integration

&centersmall Stefan Hornburg (Racke) <racke@linuxia.de>

## 
## KONZEPT
##

%page
%charset "iso8859-1"
%font "standard"

Überblick

	Module
		Net::SMTP
		Mail::IMAPClient
		ClamAV::Client
		Mail::SpamAssassin

	Szenarien
		Malware
		Blacklists
		Bayes

%page
%charset "iso8859-1"
%font "standard"

Mailversand mit Net::SMTP

	Verbindungsaufbau
&litnorm use Net::SMTP;
&litnorm my $smtp = new Net::SMTP ('linuxia.de');

	Umschlag
&litnorm $smtp->mail('pws@linuxia.de');
&litnorm $smtp->to('racke@linuxia.de');

%page
%charset "iso8859-1"
%font "standard"

Mailversand mit Net::SMTP

	Daten
&litnorm $smtp->data();
&litnorm $smtp->datasend(<<EOF);
&litsmall To: racke@linuxia.de
&litsmall Subject: Hello world

&litsmall Welcome to Net::SMTP.
&litnorm EOF
&litnorm $smtp->dataend();

	Verbindungsabbau
&litnorm $smtp->quit();

%page
%charset "iso8859-1"
%font "standard"

Hinweise

	dynamische IP
		Port 25 gesperrt
		Score/Block
	Header
		Datum
	SMTP AUTH, SSL
		Net::SMTP::TLS
	MIME
		MIME::Lite

%page
%charset "iso8859-1"
%font "standard"

Mail::IMAPClient

	Verbindungsaufbau 
&litnorm use Mail::IMAPClient;

&litnorm my %params = (Server => 'mail.linuxia.de',
&litnorm2              User => 'racke@linuxia.de',
&litnorm2              Password => 'mysecret');

&litnorm my $imap = new Mail::IMAPClient (%params);

%page
%charset "iso8859-1"
%font "standard"

Mail::IMAPClient

	Verbindungsaufbau (SSL)
&litnorm use IO::Socket::SSL;
&litnorm use Mail::IMAPClient;

&litnorm my $conn = new IO::Socket::SSL ('mail.linuxia.de:imaps');
&litnorm my %params = (Socket => $conn,
&litnorm2              User => 'racke@linuxia.de',
&litnorm2              Password => 'mysecret');

&litnorm my $imap = new Mail::IMAPClient (%params);
&litnorm $imap->{State} = 1;
&litnorm $imap->login();

%page
%charset "iso8859-1"
%font "standard"

Emails abrufen

	Ordner auswählen
&litnorm $imap->select('INBOX');

	Suche durchführen
&litnorm @msgs = $imap->search('ALL');

	Emails abholen
&litnorm for my $msgno (@msgs) {
&litnorm1 $message = $imap->message_string($msgno);
&litnorm }

%page
%charset "iso8859-1"
%font "standard"

Emails löschen

	Email markieren
&litnorm $imap->select('INBOX.Crap');

&litnorm $imap->delete_message(3,4,5,6,7);

&litnorm 100 UID store 3,4,5,6,7 +FLAGS.SILENT (\\Deleted)

	Aufräumen
&litnorm $imap->expunge();

&litnorm $imap->close();

%page
%font "standard"

Emails verschieben

	Emails verschieben

&litnorm $imap->select('INBOX');
&litnorm $imap->move('INBOX.Junk', [21,24,43,46,65]);
&litnorm $imap->expunge();

&litnorm 100 UID COPY 21,24,43,46,65 INBOX.Junk
&litnorm 101 UID store 21,24,43,46,65 +FLAGS.SILENT (\\Deleted)
&litnorm 102 expunge

%page 
%charset "iso8859-1"
%font "standard"

Emails suchen

	Betreff
&litnorm my @msgs = $imap->search('SUBJECT',
&litnorm1 $imap->Quote('Workshop');

	Kopfzeile
&litnorm my @msgs = $imap->search('HEADER', 
&litnorm1 'List-ID',
&litnorm1 $imap->Quote('IMAP'));

%page
%charset "iso8859-1"
%font "standard"

Hinweise

	Automatischer Aufruf von IMAP-Befehlen
		proprietäre/neue Erweiterungen
		Typos

	Suche
		beschränkter Umfang
		Zeichensatz

%page
%charset "iso8859-1"
%font "standard"

ClamAV::Client

	Verbindungsaufbau
&litnorm use ClamAV::Client;
&litnorm my $scanner = ClamAV::Client;
&litnorm $scanner->ping();

	Version abfragen
&litnorm $scanner->version();

&litnorm ClamAV 0.88.7/2631/Thu Feb 22 22:33:11 2007

%page
%charset "iso8859-1"
%font "standard"

ClamAV::Client

	Dateien prüfen
&litnorm	my ($file, $result) = $scanner->scan_path($path);

&litnorm		if ($result) {
&litnorm1			print "$0: file $file INFECTED: $result\\n";
&litnorm		} else {
&litnorm1			print "$0: path $path OK\\n";
&litnorm		}

	Daten prüfen
&litnorm my $message = $imap->message_string($msgno);
&litnorm my $result = $scanner->scan_scalar(\\$message);

%page
%charset "iso8859-1"
%font "standard"

Mail::SpamAssassin

	Verbindungsaufbau
		nur via Protokoll

	Initialisierung
			
&litnorm use Mail::SpamAssassin;

&litnorm $sa = new Mail::SpamAssassin;

%page
%charset "iso8859-1"
%font "standard"

Mail::SpamAssassin

	Email vorbereiten

&litnorm $message = $imap->message_string($msgno);
&litnorm $samsg = $sa->parse($message);

%page
%charset "iso8859-1"
%font "standard"

Mail::SpamAssassin

	Email prüfen

&litnorm $status = $sa->check($samsg);
&litnorm $num = $status->get_score();
&litnorm $names = $status->get_names_of_tests_hit();

&litnorm if ($status->is_spam()) {
&litnorm1    print "SPAM ($num), Treffer: $names\\n";
&litnorm } else {
&litnorm1    print "HAM ($num)\\n";
&litnorm }

%page
%charset "iso8859-1"
%font "standard"

Szenarios

	Malware

	Blacklists

	Bayes

%page 
%charset "iso8859-1"
%font "standard"

Malware

	aktuellere Datenbank

	umfassende Datenbank
		Phishing, 3rd Party

	experimentelle Version/Features

	IMAP

%page
%charset "iso8859-1"
%font "standard"

Malware

	Emails ausfiltern
&litsmall $imap->select('INBOX');
&litsmall @msgs = $imap->search('SUBJECT', $imap->Quote('Rechnung'));

	Emails prüfen
&litsmall for my $msgno (@msgs) {
&litsmall1    $message = $imap->message_string($msgno);
&litsmall1    $result = $scanner->scan_scalar(\\$message);

&litsmall1    if ($result) {
&litsmall2        print "INFECTED: $result\\n";
&litsmall2        push(@badmsgs, $msgno);
&litsmall1    } else {
&litsmall2        print "OK\\n";
&litsmall1    }
&litsmall  }

%page
%charset "iso8859-1"
%font "standard"

Malware

	Emails löschen

&litnorm $imap->delete_message(@badmsgs);
&litnorm $imap->expunge();

%page

Blacklists

	IP-Adressen,Domainnamen

	Abfrage mit DNS: DNSBL, URIDNSBL

%page

Obfuscation 

&litnorm Hi,

&litnorm VI_zAGRA $3, 35
&litnorm VA_zLIUM $1, 20
&litnorm AM_zBIEN $2, 90
&litnorm CI_zALIS $3, 75
&litnorm XA_zNAX  $1, 45

&litnorm http://www.tod*rx.com 

&litnorm Remove "*" to make the link working!

%page
%charset "iso8859-1"
%font "standard"

De-Obfuscation

&litnorm for my $uri ($status->get_uri_list()) {
&litnorm1	my $uri_orig = $uri;
&litnorm1	if ($uri =~ s/\\*//) {
&litnorm2     # found obfuscated URL
&litnorm2     $$msgref =~ s/$uri_orig/$uri/;
&litnorm2     $changes++;
&litnorm1	}
&litnorm  }

%page
%charset "iso8859-1"
%font "standard"

Obfuscation reloaded

&litnorm Hi,

&litnorm Via_aagra $3. 35
&litnorm Va_aalium $1. 25
&litnorm Cia_aalis $3. 75
&litnorm Xan_nnax
&litnorm Som_mma

&litnorm http://www. kedrx .com

&litnorm Remove spaces in the above link

%page
%charset "iso8859-1"
%font "standard"

Bayes

	heuristische Verfahren

	Corpus

	False Positives
		
	False Negatives

%page
%charset "iso8859-1"
%font "standard"

Bayes

&litnorm $imap->select('INBOX.NOSPAM');

&litnorm @msgs = $imap->search('ALL');

&litnorm $sa->init_learner({wait_for_lock => 1, learn_to_journal => 1});

&litnorm for $msgno (@msgs) {
&litnorm1    $message = $imap->message_string($msgno);
&litnorm1	$samsgref = $sa->parse($message);
&litnorm1	$status = $sa->learn($samsgref, undef, 1);
&litnorm }

%page

Abspann

	Folien
		http://www.linuxia.de/talks/pws2007/

	Email
		racke@linuxia.de


# Q&A:
# Fragen wiederholen
