#! /usr/bin/perl
#
# Copyright (C) 2009 Stefan Hornburg (Racke) <racke@linuxia.de>

use strict;
use warnings;

use AppConfig qw(:argcount);

use Data::ICal;

use DateTime::Format::ICal;

use RT::Client::REST;
use RT::Client::REST::Ticket;

unless (@ARGV == 2) {
	die "$0: need configuration and calendar file\n";
}

my ($cfgfile, $config, $calfile, $calendar, $calentries, $rt);

# Read configuration file
$cfgfile = shift;
$config = read_config($cfgfile, {});
	
# iCal
$calfile = shift;
$calendar = new Data::ICal(filename => $calfile);

# RT
$rt = new RT::Client::REST (server => $config->{url});
$rt->login(username => $config->{username}, password => $config->{password});

# list of calendar entries
$calentries = $calendar->entries();

my ($location, $ticket);

for my $entry (@$calentries) {
	# get location
	$location = $entry->property('location')->[0]->value();

	next if $location eq '' || $location eq 'Go Open';
	
	my (%talk, $id, $dtstart, $dtend, $start, $end, $duration);

	$dtstart = $entry->property('dtstart')->[0]->value();
	$dtend = $entry->property('dtend')->[0]->value();
		
	# make proper datetime for RT out of ICal date
	$start = DateTime::Format::ICal->parse_datetime($dtstart);
	$end = DateTime::Format::ICal->parse_datetime($dtend);

	# start time of talk
	$talk{start} = $start->strftime('%Y-%m-%d %H:%M');

	# end time of talk
	$talk{end} = $end->strftime('%Y-%m-%d %H:%M');
	
	# talk duration
	$duration = $end->subtract_datetime($start);
	$talk{time_estimated} = $duration->minutes;
		
	$talk{title} = $entry->property('summary')->[0]->decoded_value();
	$talk{description} = $entry->property('description')->[0]->decoded_value();
	$talk{title} =~ s/\\,/,/g;
	$talk{description} =~ s/\\,/,/g;
	$talk{description} =~ s/\\n/\n/g;

	$talk{url} = $entry->property('url')->[0]->value();
	$ticket = add_talk($rt, %talk);
}

sub add_talk {
	my ($rt, %talk) = @_;
	my (%parms, $id, $ticket);

	# pass RT/REST object
	$parms{rt} = $rt;
	
	$parms{queue} = 'Nordic Perl Workshop';
	$parms{subject} = $talk{title};
	$parms{starts} = $talk{start};
	$parms{due} = $talk{end};
	$parms{time_estimated} = $talk{time_estimated};

	# custom fields
	$parms{cf} = {talk_url => $talk{url}};
	
	# create ticket object
	$ticket = new RT::Client::REST::Ticket(%parms);

	# store ticket
	$ticket->store(text => $talk{description});
	
}

sub read_config {
	my ($file, $confref) = @_;
	my $ac;
	$ac = new AppConfig({GLOBAL => {ARGCOUNT => ARGCOUNT_ONE}});

	for my $var (qw{url queue username password}) {
		$ac->define($var, {DEFAULT => $confref->{$var}});
	}

	$ac->file($file);
	%$confref = $ac->varlist('.*');

	return $confref;
}
